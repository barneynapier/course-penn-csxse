{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/#courses/Penn CS for SE/JS for web/lists/src/App.js\";\nimport React, { Component } from \"react\";\nimport Lists from \"./Lists.js\";\nimport AddList from \"./AddList.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lists: [],\n      // this holds the name of each list\n      items: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n\n    };\n  }\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n\n\n  handleAddList(s) {\n    // Add listname to lists\n    console.log(\"New Name = \" + s);\n    this.setState({\n      lists: this.state.lists.push(s)\n    });\n    console.log(this.state.lists);\n  }\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the\n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of\n   * the state, this function  should then re-render this App component.\n   */\n\n\n  handleAddItem(s) {// Implement this function!\n  }\n  /**\n   * Renders the component.\n   */\n\n\n  render() {\n    console.log(this.state.lists);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AddList, {\n        addList: this.handleAddList.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"listsDiv\",\n        className: \"List\",\n        children: /*#__PURE__*/_jsxDEV(Lists, {\n          lists: this.state.lists,\n          items: this.state.items,\n          addItem: this.handleAddItem.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/#courses/Penn CS for SE/JS for web/lists/src/App.js"],"names":["React","Component","Lists","AddList","App","constructor","state","lists","items","handleAddList","s","console","log","setState","push","handleAddItem","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AACA;AACXC,MAAAA,KAAK,EAAE,EAFI,CAEA;;AAFA,KAAb;AAID;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,CAA5B;AACA,SAAKG,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,IAAjB,CAAsBJ,CAAtB;AAAT,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEQ,EAAAA,aAAa,CAACL,CAAD,EAAI,CACf;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKE,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,KADpB;AAEE,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,UAAA,OAAO,EAAE,KAAKO,aAAL,CAAmBE,IAAnB,CAAwB,IAAxB;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAnDyB;;AAsD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Lists from \"./Lists.js\";\nimport AddList from \"./AddList.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lists: [], // this holds the name of each list\n      items: {}, // this property names of this object are the names of the lists; their values are arrays of the items in each list\n    };\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n    // Add listname to lists\n    console.log(\"New Name = \" + s);\n    this.setState({ lists: this.state.lists.push(s) });\n    console.log(this.state.lists);\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the\n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of\n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(s) {\n    // Implement this function!\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n    console.log(this.state.lists);\n    return (\n      <div className=\"App\">\n        <AddList addList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists\n            lists={this.state.lists}\n            items={this.state.items}\n            addItem={this.handleAddItem.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}